{"@ID": "416", "@Name": "Use After Free", "@Abstraction": "Variant", "@Structure": "Simple", "@Status": "Stable", "Description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.", "Extended_Description": {"xhtml:p": ["The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory. Use-after-free errors have two common and sometimes overlapping causes:", "In this scenario, the memory in question is allocated to another pointer validly at some point after it has been freed. The original pointer to the freed memory is used again and points to somewhere within the new allocation. As the data is changed, it corrupts the validly used memory; this induces undefined behavior in the process.", "If the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved."], "xhtml:ul": {"xhtml:li": ["Error conditions and other exceptional circumstances.", "Confusion over which part of the program is responsible for freeing the memory."]}}, "Related_Weaknesses": {"Related_Weakness": [{"@Nature": "ChildOf", "@CWE_ID": "825", "@View_ID": "1000", "@Ordinal": "Primary"}, {"@Nature": "ChildOf", "@CWE_ID": "672", "@View_ID": "1003", "@Ordinal": "Primary"}, {"@Nature": "ChildOf", "@CWE_ID": "672", "@View_ID": "1305", "@Ordinal": "Primary"}, {"@Nature": "ChildOf", "@CWE_ID": "672", "@View_ID": "1340", "@Ordinal": "Primary"}, {"@Nature": "CanPrecede", "@CWE_ID": "120", "@View_ID": "1000"}, {"@Nature": "CanPrecede", "@CWE_ID": "123", "@View_ID": "1000"}]}, "Applicable_Platforms": {"Language": [{"@Name": "C", "@Prevalence": "Undetermined"}, {"@Name": "C++", "@Prevalence": "Undetermined"}]}, "Alternate_Terms": {"Alternate_Term": [{"Term": "Dangling pointer"}, {"Term": "Use-After-Free"}]}, "Modes_Of_Introduction": {"Introduction": {"Phase": "Implementation"}}, "Likelihood_Of_Exploit": "High", "Common_Consequences": {"Consequence": [{"Scope": "Integrity", "Impact": "Modify Memory", "Note": "The use of previously freed memory may corrupt valid data, if the memory area in question has been allocated and used properly elsewhere."}, {"Scope": "Availability", "Impact": "DoS: Crash, Exit, or Restart", "Note": "If chunk consolidation occurs after the use of previously freed data, the process may crash when invalid data is used as chunk information."}, {"Scope": ["Integrity", "Confidentiality", "Availability"], "Impact": "Execute Unauthorized Code or Commands", "Note": "If malicious data is entered before chunk consolidation can take place, it may be possible to take advantage of a write-what-where primitive to execute arbitrary code."}]}, "Detection_Methods": {"Detection_Method": [{"@Detection_Method_ID": "DM-13", "Method": "Fuzzing", "Description": "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.", "Effectiveness": "High"}, {"@Detection_Method_ID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}]}, "Potential_Mitigations": {"Mitigation": [{"Phase": "Architecture and Design", "Description": "Choose a language that provides automatic memory management."}, {"Phase": "Implementation", "Description": "When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy."}]}, "Demonstrative_Examples": {"Demonstrative_Example": [{"Intro_Text": "The following example demonstrates the weakness.", "Example_Code": {"@Nature": "Bad", "@Language": "C", "xhtml:div": {"xhtml:br": [null, null, null, null], "xhtml:div": {"@style": "margin-left:1em;", "xhtml:br": [null, null, null, null, null, null, null, null, null, null, null, null], "#text": "char *buf1R1;char *buf2R1;char *buf2R2;char *buf3R2;buf1R1 = (char *) malloc(BUFSIZER1);buf2R1 = (char *) malloc(BUFSIZER1);free(buf2R1);buf2R2 = (char *) malloc(BUFSIZER2);buf3R2 = (char *) malloc(BUFSIZER2);strncpy(buf2R1, argv[1], BUFSIZER1-1);free(buf1R1);free(buf2R2);free(buf3R2);"}, "#text": "#include <stdio.h>#include <unistd.h>#define BUFSIZER1 512#define BUFSIZER2 ((BUFSIZER1/2) - 8)int main(int argc, char **argv) {}"}}}, {"Intro_Text": "The following code illustrates a use after free error:", "Example_Code": {"@Nature": "Bad", "@Language": "C", "xhtml:div": {"xhtml:br": [null, null, null], "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:br": null, "#text": "abrt = 1;free(ptr);"}, {"@style": "margin-left:1em;", "#text": "logError(\"operation aborted before commit\", ptr);"}], "#text": "char* ptr = (char*)malloc (SIZE);if (err) {}...if (abrt) {}"}}, "Body_Text": "When an error occurs, the pointer is immediately freed. However, this pointer is later incorrectly used in the logError function."}]}, "Observed_Examples": {"Observed_Example": [{"Reference": "CVE-2021-0920", "Description": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2021-0920"}, {"Reference": "CVE-2020-6819", "Description": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV.", "Link": "https://www.cve.org/CVERecord?id=CVE-2020-6819"}, {"Reference": "CVE-2010-4168", "Description": "Use-after-free triggered by closing a connection while data is still being transmitted.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-4168"}, {"Reference": "CVE-2010-2941", "Description": "Improper allocation for invalid data leads to use-after-free.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2941"}, {"Reference": "CVE-2010-2547", "Description": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2547"}, {"Reference": "CVE-2010-1772", "Description": "Timers are not disabled when a related object is deleted", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1772"}, {"Reference": "CVE-2010-1437", "Description": "Access to a \"dead\" object that is being cleaned up", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1437"}, {"Reference": "CVE-2010-1208", "Description": "object is deleted even with a non-zero reference count, and later accessed", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-1208"}, {"Reference": "CVE-2010-0629", "Description": "use-after-free involving request containing an invalid version number", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0629"}, {"Reference": "CVE-2010-0378", "Description": "unload of an object that is currently being accessed by other functionality", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0378"}, {"Reference": "CVE-2010-0302", "Description": "incorrectly tracking a reference count leads to use-after-free", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0302"}, {"Reference": "CVE-2010-0249", "Description": "use-after-free related to use of uninitialized memory", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0249"}, {"Reference": "CVE-2010-0050", "Description": "HTML document with incorrectly-nested tags", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0050"}, {"Reference": "CVE-2009-3658", "Description": "Use after free in ActiveX object by providing a malformed argument to a method", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3658"}, {"Reference": "CVE-2009-3616", "Description": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3616"}, {"Reference": "CVE-2009-3553", "Description": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-3553"}, {"Reference": "CVE-2009-2416", "Description": "use-after-free found by fuzzing", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2416"}, {"Reference": "CVE-2009-1837", "Description": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1837"}, {"Reference": "CVE-2009-0749", "Description": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0749"}, {"Reference": "CVE-2010-3328", "Description": "Use-after-free in web browser, probably resultant from not initializing memory.", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-3328"}, {"Reference": "CVE-2008-5038", "Description": "use-after-free when one thread accessed memory that was freed by another thread", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-5038"}, {"Reference": "CVE-2008-0077", "Description": "assignment of malformed values to certain properties triggers use after free", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-0077"}, {"Reference": "CVE-2006-4434", "Description": "mail server does not properly handle a long header.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4434"}, {"Reference": "CVE-2010-2753", "Description": "chain: integer overflow leads to use-after-free", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-2753"}, {"Reference": "CVE-2006-4997", "Description": "freed pointer dereference", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4997"}]}, "Affected_Resources": {"Affected_Resource": "Memory"}, "Taxonomy_Mappings": {"Taxonomy_Mapping": [{"@Taxonomy_Name": "7 Pernicious Kingdoms", "Entry_Name": "Use After Free"}, {"@Taxonomy_Name": "CLASP", "Entry_Name": "Using freed memory"}, {"@Taxonomy_Name": "CERT C Secure Coding", "Entry_ID": "MEM00-C", "Entry_Name": "Allocate and free memory in the same module, at the same level of abstraction"}, {"@Taxonomy_Name": "CERT C Secure Coding", "Entry_ID": "MEM01-C", "Entry_Name": "Store a new value in pointers immediately after free()"}, {"@Taxonomy_Name": "CERT C Secure Coding", "Entry_ID": "MEM30-C", "Entry_Name": "Do not access freed memory", "Mapping_Fit": "Exact"}, {"@Taxonomy_Name": "Software Fault Patterns", "Entry_ID": "SFP15", "Entry_Name": "Faulty Resource Use"}]}, "References": {"Reference": [{"@External_Reference_ID": "REF-6"}, {"@External_Reference_ID": "REF-18"}, {"@External_Reference_ID": "REF-44", "@Section": "\"Sin 8: C++ Catastrophes.\" Page 143"}]}, "Content_History": {"Submission": {"Submission_Name": "7 Pernicious Kingdoms", "Submission_Date": "2006-07-19"}, "Modification": [{"Modification_Name": "Eric Dalci", "Modification_Organization": "Cigital", "Modification_Date": "2008-07-01", "Modification_Comment": "updated Potential_Mitigations, Time_of_Introduction"}, {"Modification_Organization": "KDM Analytics", "Modification_Date": "2008-08-01", "Modification_Comment": "added/updated white box definitions"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2008-09-08", "Modification_Comment": "updated Applicable_Platforms, Common_Consequences, Relationships, Observed_Example, Other_Notes, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2008-11-24", "Modification_Comment": "updated Relationships, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2009-03-10", "Modification_Comment": "updated Demonstrative_Examples"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2009-05-27", "Modification_Comment": "updated Demonstrative_Examples"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2009-10-29", "Modification_Comment": "updated Common_Consequences"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2010-02-16", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2010-06-21", "Modification_Comment": "updated Potential_Mitigations"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2010-09-27", "Modification_Comment": "updated Observed_Examples, Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2010-12-13", "Modification_Comment": "updated Alternate_Terms, Common_Consequences, Description, Observed_Examples, Other_Notes, Potential_Mitigations, Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2011-03-29", "Modification_Comment": "updated Description"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2011-06-01", "Modification_Comment": "updated Common_Consequences"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2011-06-27", "Modification_Comment": "updated Demonstrative_Examples"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2011-09-13", "Modification_Comment": "updated Relationships, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2012-05-11", "Modification_Comment": "updated References, Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2014-07-30", "Modification_Comment": "updated Relationships, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2015-12-07", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2017-11-08", "Modification_Comment": "updated Demonstrative_Examples, Relationships, Taxonomy_Mappings, White_Box_Definitions"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2019-01-03", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2019-06-20", "Modification_Comment": "updated Relationships, Type"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2019-09-19", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-02-24", "Modification_Comment": "updated References, Relationships, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-06-25", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-08-20", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-12-10", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2021-07-20", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2022-06-28", "Modification_Comment": "updated Observed_Examples, Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2022-10-13", "Modification_Comment": "updated Description, Relationships, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2023-04-27", "Modification_Comment": "updated Detection_Factors, Relationships, Time_of_Introduction"}], "Contribution": {"@Type": "Feedback", "Contribution_Name": "Anonymous External Contributor", "Contribution_Date": "2022-06-28", "Contribution_Comment": "Suggested rephrase for extended description"}}}