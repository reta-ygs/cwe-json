{"cwe": {"@ID": "1276", "@Name": "Hardware Child Block Incorrectly Connected to Parent System", "@Abstraction": "Base", "@Structure": "Simple", "@Status": "Incomplete", "Description": "Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.", "Extended_Description": {"xhtml:p": "Individual hardware IP must communicate with the parent system in order for the product to function correctly and as intended. If implemented incorrectly, while not causing any apparent functional issues, may cause security issues. For example, if the IP should only be reset by a system-wide hard reset, but instead the reset input is connected to a software-triggered debug mode reset (which is also asserted during a hard reset), integrity of data inside the IP can be violated."}, "Related_Weaknesses": {"Related_Weakness": {"@Nature": "ChildOf", "@CWE_ID": "284", "@View_ID": "1000", "@Ordinal": "Primary"}}, "Applicable_Platforms": {"Language": {"@Class": "Not Language-Specific", "@Prevalence": "Undetermined"}, "Operating_System": {"@Class": "Not OS-Specific", "@Prevalence": "Undetermined"}, "Architecture": {"@Class": "Not Architecture-Specific", "@Prevalence": "Undetermined"}, "Technology": {"@Class": "Not Technology-Specific", "@Prevalence": "Undetermined"}}, "Modes_Of_Introduction": {"Introduction": {"Phase": "Implementation", "Note": "This weakness is introduced when integrating IP into a parent design."}}, "Common_Consequences": {"Consequence": {"Scope": ["Confidentiality", "Integrity", "Availability"], "Impact": "Varies by Context"}}, "Potential_Mitigations": {"Mitigation": {"Phase": "Testing", "Description": "System-level verification may be used to ensure that components are correctly connected and that design security requirements are not violated due to interactions between various IP blocks."}}, "Demonstrative_Examples": {"Demonstrative_Example": {"Intro_Text": "Many SoCs use hardware to partition system resources between trusted and un-trusted entities. One example of this concept is the Arm TrustZone, in which the processor and all security-aware IP attempt to isolate resources based on the status of a privilege bit. This privilege bit is part of the input interface in all TrustZone-aware IP. If this privilege bit is accidentally grounded or left unconnected when the IP is instantiated, privilege escalation of all input data may occur.", "Example_Code": [{"@Nature": "Bad", "@Language": "Verilog", "xhtml:br": [null, null, null, null, null, null], "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:br": [null, null, null, null], "#text": "input clk, reset;\n\t\t\t\tinput [31:0] data_in;\n\t\t\t\tinput data_in_security_level;\n\t\t\t\t..."}, {"@style": "margin-left:1em;", "xhtml:br": [null, null, null, null], "xhtml:div": {"@style": "margin-left:1em;", "xhtml:br": [null, null, null, null, null], "#text": ".clk(clk),\n\t\t\t\t  .rst(rst),\n\t\t\t\t  .data_in(rdata),\n\t\t\t\t  //Copy-and-paste error or typo grounds data_in_security_level (in this example 0=secure, 1=non-secure) effectively promoting all data to \"secure\")\n\t\t\t\t  .data_in_security_level(1'b0),"}, "#text": "...\n\t\t\t\ttz_peripheral u_tz_peripheral(\n\t\t\t\t\n\t\t\t\t);\n\t\t\t\t..."}], "#text": "// IP definition\n\t\t\t      module tz_peripheral(clk, reset, data_in, data_in_security_level, ...);\n\t\t\t      \n\t\t\t      endmodule\n\t\t\t      // Instantiation of IP in a parent system\n\t\t\t      module soc(...)\n\t\t\t      \n\t\t\t      endmodule"}, {"@Nature": "Good", "@Language": "Verilog", "xhtml:br": [null, null, null], "xhtml:div": {"@style": "margin-left:1em;", "xhtml:br": [null, null, null, null], "xhtml:div": {"@style": "margin-left:1em;", "xhtml:br": [null, null, null, null, null], "#text": ".clk(clk),\n\t\t\t\t  .rst(rst),\n\t\t\t\t  .data_in(rdata),\n\t\t\t\t  // This port is no longer grounded, but instead driven by the appropriate signal\n\t\t\t\t  .data_in_security_level(rdata_security_level),"}, "#text": "...\n\t\t\t\ttz_peripheral u_tz_peripheral(\n\t\t\t\t\n\t\t\t\t);\n\t\t\t\t..."}, "#text": "// Instantiation of IP in a parent system\n\t\t\t      module soc(...)\n\t\t\t      \n\t\t\t      endmodule"}], "Body_Text": "In the Verilog code below, the security level input to the TrustZone aware peripheral is correctly driven by an appropriate signal instead of being grounded."}}, "Content_History": {"Submission": {"Submission_Name": "Nicole Fern", "Submission_Organization": "Tortuga Logic", "Submission_Date": "2020-05-22"}, "Modification": [{"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-08-20", "Modification_Comment": "updated Demonstrative_Examples, Description, Modes_of_Introduction, Name, Potential_Mitigations"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2022-10-13", "Modification_Comment": "updated Demonstrative_Examples"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2023-04-27", "Modification_Comment": "updated Relationships"}], "Previous_Entry_Name": {"@Date": "2020-08-20", "#text": "Hardware Block Incorrectly Connected to Larger System"}}}, "copyright": "Copyright \u00a9 2006\u20132023, The MITRE Corporation. CWE, CWSS, CWRAF, and the CWE logo are trademarks of The MITRE Corporation.", "license": "CWE Usage: MITRE hereby grants you a non-exclusive, royalty-free license to use CWE for research, development, and commercial purposes. Any copy you make for such purposes is authorized on the condition that you reproduce MITRE\u2019s copyright designation and this license in any such copy."}