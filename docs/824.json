{"@ID": "824", "@Name": "Access of Uninitialized Pointer", "@Abstraction": "Base", "@Structure": "Simple", "@Status": "Incomplete", "Description": "The product accesses or uses a pointer that has not been initialized.", "Extended_Description": {"xhtml:p": ["If the pointer contains an uninitialized value, then the value might not point to a valid memory location. This could cause the product to read from or write to unexpected memory locations, leading to a denial of service. If the uninitialized pointer is used as a function call, then arbitrary functions could be invoked. If an attacker can influence the portion of uninitialized memory that is contained in the pointer, this weakness could be leveraged to execute code or perform other attacks.", "Depending on memory layout, associated memory management behaviors, and product operation, the attacker might be able to influence the contents of the uninitialized pointer, thus gaining more fine-grained control of the memory location to be accessed."]}, "Related_Weaknesses": {"Related_Weakness": [{"@Nature": "ChildOf", "@CWE_ID": "119", "@View_ID": "1000", "@Ordinal": "Primary"}, {"@Nature": "ChildOf", "@CWE_ID": "119", "@View_ID": "1003", "@Ordinal": "Primary"}, {"@Nature": "ChildOf", "@CWE_ID": "119", "@View_ID": "1305", "@Ordinal": "Primary"}, {"@Nature": "ChildOf", "@CWE_ID": "119", "@View_ID": "1340", "@Ordinal": "Primary"}, {"@Nature": "CanPrecede", "@CWE_ID": "125", "@View_ID": "1000"}, {"@Nature": "CanPrecede", "@CWE_ID": "787", "@View_ID": "1000"}]}, "Common_Consequences": {"Consequence": [{"Scope": "Confidentiality", "Impact": "Read Memory", "Note": "If the uninitialized pointer is used in a read operation, an attacker might be able to read sensitive portions of memory."}, {"Scope": "Availability", "Impact": "DoS: Crash, Exit, or Restart", "Note": "If the uninitialized pointer references a memory location that is not accessible to the product, or points to a location that is \"malformed\" (such as NULL) or larger than expected by a read or write operation, then a crash may occur."}, {"Scope": ["Integrity", "Confidentiality", "Availability"], "Impact": "Execute Unauthorized Code or Commands", "Note": "If the uninitialized pointer is used in a function call, or points to unexpected data in a write operation, then code execution may be possible."}]}, "Detection_Methods": {"Detection_Method": {"@Detection_Method_ID": "DM-14", "Method": "Automated Static Analysis", "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)", "Effectiveness": "High"}}, "Observed_Examples": {"Observed_Example": [{"Reference": "CVE-2010-0211", "Description": "chain: unchecked return value (CWE-252) leads to free of invalid, uninitialized pointer (CWE-824).", "Link": "https://www.cve.org/CVERecord?id=CVE-2010-0211"}, {"Reference": "CVE-2009-2768", "Description": "Pointer in structure is not initialized, leading to NULL pointer dereference (CWE-476) and system crash.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-2768"}, {"Reference": "CVE-2009-1721", "Description": "Free of an uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1721"}, {"Reference": "CVE-2009-1415", "Description": "Improper handling of invalid signatures leads to free of invalid pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-1415"}, {"Reference": "CVE-2009-0846", "Description": "Invalid encoding triggers free of uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0846"}, {"Reference": "CVE-2009-0040", "Description": "Crafted PNG image leads to free of uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2009-0040"}, {"Reference": "CVE-2008-2934", "Description": "Crafted GIF image leads to free of uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2008-2934"}, {"Reference": "CVE-2007-4682", "Description": "Access of uninitialized pointer might lead to code execution.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4682"}, {"Reference": "CVE-2007-4639", "Description": "Step-based manipulation: invocation of debugging function before the primary initialization function leads to access of an uninitialized pointer and code execution.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4639"}, {"Reference": "CVE-2007-4000", "Description": "Unchecked return values can lead to a write to an uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-4000"}, {"Reference": "CVE-2007-2442", "Description": "zero-length input leads to free of uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-2442"}, {"Reference": "CVE-2007-1213", "Description": "Crafted font leads to uninitialized function pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2007-1213"}, {"Reference": "CVE-2006-6143", "Description": "Uninitialized function pointer in freed memory is invoked", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-6143"}, {"Reference": "CVE-2006-4175", "Description": "LDAP server mishandles malformed BER queries, leading to free of uninitialized memory", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-4175"}, {"Reference": "CVE-2006-0054", "Description": "Firewall can crash with certain ICMP packets that trigger access of an uninitialized pointer.", "Link": "https://www.cve.org/CVERecord?id=CVE-2006-0054"}, {"Reference": "CVE-2003-1201", "Description": "LDAP server does not initialize members of structs, which leads to free of uninitialized pointer if an LDAP request fails.", "Link": "https://www.cve.org/CVERecord?id=CVE-2003-1201"}]}, "References": {"Reference": {"@External_Reference_ID": "REF-62", "@Section": "Chapter 7, \"Variable Initialization\", Page 312"}}, "Notes": {"Note": [{"@Type": "Maintenance", "#text": "There are close relationships between incorrect pointer dereferences and other weaknesses related to buffer operations. There may not be sufficient community agreement regarding these relationships. Further study is needed to determine when these relationships are chains, composites, perspective/layering, or other types of relationships. As of September 2010, most of the relationships are being captured as chains."}, {"@Type": "Terminology", "#text": "Many weaknesses related to pointer dereferences fall under the general term of \"memory corruption\" or \"memory safety.\" As of September 2010, there is no commonly-used terminology that covers the lower-level variants."}]}, "Content_History": {"Submission": {"Submission_Name": "CWE Content Team", "Submission_Organization": "MITRE", "Submission_Date": "2010-09-22"}, "Modification": [{"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2012-05-11", "Modification_Comment": "updated References"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2015-12-07", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-02-24", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-08-20", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-12-10", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2022-04-28", "Modification_Comment": "updated Research_Gaps"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2023-01-31", "Modification_Comment": "updated Common_Consequences, Description"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2023-04-27", "Modification_Comment": "updated Detection_Factors, Relationships"}]}}