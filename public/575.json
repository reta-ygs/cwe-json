{"@ID": "575", "@Name": "EJB Bad Practices: Use of AWT Swing", "@Abstraction": "Variant", "@Structure": "Simple", "@Status": "Draft", "Description": "The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.", "Extended_Description": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use the AWT functionality to attempt to output information to a display, or to input information from a keyboard.\" The specification justifies this requirement in the following way: \"Most servers do not allow direct interaction between an application program and a keyboard/display attached to the server system.\"", "Related_Weaknesses": {"Related_Weakness": {"@Nature": "ChildOf", "@CWE_ID": "695", "@View_ID": "1000", "@Ordinal": "Primary"}}, "Applicable_Platforms": {"Language": {"@Name": "Java", "@Prevalence": "Undetermined"}}, "Modes_Of_Introduction": {"Introduction": {"Phase": "Implementation"}}, "Common_Consequences": {"Consequence": {"Scope": "Other", "Impact": "Quality Degradation"}}, "Potential_Mitigations": {"Mitigation": {"Phase": "Architecture and Design", "Description": "Do not use AWT/Swing when writing EJBs."}}, "Demonstrative_Examples": {"Demonstrative_Example": {"Intro_Text": "The following Java example is a simple converter class for converting US dollars to Yen. This converter class demonstrates the improper practice of using a stateless session Enterprise JavaBean that implements an AWT Component and AWT keyboard event listener to retrieve keyboard input from the user for the amount of the US dollars to convert to Yen.", "Example_Code": [{"@Nature": "Bad", "@Language": "Java", "xhtml:div": {"xhtml:br": null, "xhtml:div": {"@style": "margin-left:1em;", "xhtml:div": {"xhtml:br": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "xhtml:i": ["/* member variables for receiving keyboard input using AWT API */", "/* conversion rate on US dollars to Yen */", "/* member functions for implementing AWT KeyListener interface */", "/* member functions for receiving keyboard input and displaying output */"], "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:div": {"xhtml:br": [null, null, null, null], "xhtml:i": "/* method calls for setting up AWT Component for receiving keyboard input */", "#text": "super();\n                                 \n                                 \n                                 ...addKeyListener(this);"}}, {"@style": "margin-left:1em;", "xhtml:br": null, "#text": "BigDecimal result = dollars.multiply(yenRate);return result.setScale(2, BigDecimal.ROUND_DOWN);"}, {"@style": "margin-left:1em;", "#text": "..."}], "#text": "...private StringBuffer enteredText = new StringBuffer();\n                           \n                           \n                           \n                           private BigDecimal yenRate = new BigDecimal(\"115.3100\");\n                           public ConverterSessionBean() {}\n                           public BigDecimal dollarToYen(BigDecimal dollars) {}\n                           \n                           \n                           \n                           public void keyTyped(KeyEvent event) {}\n                           public void keyPressed(KeyEvent e) {}\n                           public void keyReleased(KeyEvent e) {}\n                           \n                           \n                           \n                           public void paint(Graphics g) {...}\n                           ..."}}, "#text": "@Statelesspublic class ConverterSessionBean extends Component implements KeyListener, ConverterSessionRemote {}"}}, {"@Nature": "Good", "@Language": "Java", "xhtml:div": {"xhtml:br": null, "xhtml:div": {"@style": "margin-left:1em;", "xhtml:div": {"xhtml:br": [null, null, null, null, null, null, null, null, null], "xhtml:i": ["/* conversion rate on US dollars to Yen */", "/* remote method to convert US dollars to Yen */"], "xhtml:div": {"@style": "margin-left:1em;", "xhtml:br": null, "#text": "BigDecimal result = dollars.multiply(yenRate);return result.setScale(2, BigDecimal.ROUND_DOWN);"}, "#text": "private BigDecimal yenRate = new BigDecimal(\"115.3100\");\n                           public ConverterSessionBean() {}\n                           \n                           \n                           \n                           public BigDecimal dollarToYen(BigDecimal dollars) {}"}}, "#text": "@Statelesspublic class ConverterSessionBean implements ConverterSessionRemoteInterface {}"}}, {"@Nature": "Good", "@Language": "JSP", "xhtml:div": {"xhtml:br": [null, null, null], "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:div": {"xhtml:br": [null, null], "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:br": null, "#text": "InitialContext ic = new InitialContext();converter = (Converter) ic.lookup(Converter.class.getName());"}, {"@style": "margin-left:1em;", "#text": "System.out.println(\"Couldn't create converter bean.\"+ ex.getMessage());"}], "#text": "try {} catch (Exception ex) {}"}, {"@style": "margin-left:1em;", "#text": "converter = null;"}], "#text": "private Converter converter = null;public void jspInit() {}public void jspDestroy() {}"}}, {"@style": "margin-left:1em;", "xhtml:div": {"xhtml:br": null, "xhtml:div": {"@style": "margin-left:1em;", "xhtml:div": {"xhtml:br": [null, null, null, null, null, null, null, null, null, null], "xhtml:div": [{"@style": "margin-left:1em;", "xhtml:br": [null, null, null], "#text": "<input type=\"text\" name=\"amount\" size=\"25\"><br><p><input type=\"submit\" value=\"Submit\"><input type=\"reset\" value=\"Reset\">"}, {"@style": "margin-left:1em;", "xhtml:br": null, "xhtml:div": {"@style": "margin-left:1em;", "xhtml:br": null, "#text": "BigDecimal d = new BigDecimal(amount);BigDecimal yenAmount = converter.dollarToYen(d);"}, "#text": "String amount = request.getParameter(\"amount\");if ( amount != null && amount.length() > 0 ) {"}, {"@style": "margin-left:1em;", "#text": "}"}], "#text": "<h1>Converter</h1><hr><p>Enter an amount to convert:</p><form method=\"get\"></form><%\n                                 %><p><%= amount %> dollars are <%= yenAmount %> Yen.<p><%\n                                 %>"}}, "#text": "<head><title>Converter</title></head><body bgcolor=\"white\"></body>"}}], "#text": "<%@ page import=\"converter.ejb.Converter, java.math.*, javax.naming.*\"%><%!\n                     %><html></html>"}}], "Body_Text": ["This use of the AWT and Swing APIs within any kind of Enterprise JavaBean not only violates the restriction of the EJB specification against using AWT or Swing within an EJB but also violates the intended use of Enterprise JavaBeans to separate business logic from presentation logic.", "The Stateless Session Enterprise JavaBean should contain only business logic. Presentation logic should be provided by some other mechanism such as Servlets or Java Server Pages (JSP) as in the following Java/JSP example."]}}, "Taxonomy_Mappings": {"Taxonomy_Mapping": {"@Taxonomy_Name": "Software Fault Patterns", "Entry_ID": "SFP3", "Entry_Name": "Use of an improper API"}}, "Content_History": {"Submission": {"Submission_Name": "CWE Community", "Submission_Date": "2006-12-15", "Submission_Comment": "Submitted by members of the CWE community to extend early CWE versions"}, "Modification": [{"Modification_Name": "Eric Dalci", "Modification_Organization": "Cigital", "Modification_Date": "2008-07-01", "Modification_Comment": "updated Potential_Mitigations, Time_of_Introduction"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2008-09-08", "Modification_Comment": "updated Relationships, Other_Notes"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2009-10-29", "Modification_Comment": "updated Description, Other_Notes"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2009-12-28", "Modification_Comment": "updated Demonstrative_Examples, Potential_Mitigations"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2011-06-01", "Modification_Comment": "updated Common_Consequences"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2011-06-27", "Modification_Comment": "updated Common_Consequences"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2012-05-11", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2014-07-30", "Modification_Comment": "updated Relationships, Taxonomy_Mappings"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2020-02-24", "Modification_Comment": "updated Relationships"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2023-01-31", "Modification_Comment": "updated Description"}, {"Modification_Name": "CWE Content Team", "Modification_Organization": "MITRE", "Modification_Date": "2023-04-27", "Modification_Comment": "updated Relationships, Time_of_Introduction"}]}}